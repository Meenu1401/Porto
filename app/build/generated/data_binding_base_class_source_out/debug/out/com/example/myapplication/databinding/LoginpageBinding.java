// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginpageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final EditText edit1;

  @NonNull
  public final EditText edit2;

  @NonNull
  public final TextView forgotPass;

  @NonNull
  public final TextView loginBtn;

  @NonNull
  public final TextView signup;

  @NonNull
  public final TextView tv2;

  @NonNull
  public final TextView tvget;

  private LoginpageBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout container,
      @NonNull EditText edit1, @NonNull EditText edit2, @NonNull TextView forgotPass,
      @NonNull TextView loginBtn, @NonNull TextView signup, @NonNull TextView tv2,
      @NonNull TextView tvget) {
    this.rootView = rootView;
    this.container = container;
    this.edit1 = edit1;
    this.edit2 = edit2;
    this.forgotPass = forgotPass;
    this.loginBtn = loginBtn;
    this.signup = signup;
    this.tv2 = tv2;
    this.tvget = tvget;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginpageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginpageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loginpage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginpageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.edit1;
      EditText edit1 = ViewBindings.findChildViewById(rootView, id);
      if (edit1 == null) {
        break missingId;
      }

      id = R.id.edit2;
      EditText edit2 = ViewBindings.findChildViewById(rootView, id);
      if (edit2 == null) {
        break missingId;
      }

      id = R.id.forgot_pass;
      TextView forgotPass = ViewBindings.findChildViewById(rootView, id);
      if (forgotPass == null) {
        break missingId;
      }

      id = R.id.loginBtn;
      TextView loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.signup;
      TextView signup = ViewBindings.findChildViewById(rootView, id);
      if (signup == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.tvget;
      TextView tvget = ViewBindings.findChildViewById(rootView, id);
      if (tvget == null) {
        break missingId;
      }

      return new LoginpageBinding((ConstraintLayout) rootView, container, edit1, edit2, forgotPass,
          loginBtn, signup, tv2, tvget);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
